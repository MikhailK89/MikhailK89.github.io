{"version":3,"sources":["components/Add.js","components/Message.js","components/Chat.js","components/Contacts.js","components/User.js","components/Button.js","components/Header.js","components/Loading.js","components/Error.js","components/Authorization.js","App.js","serviceWorker.js","index.js"],"names":["Add","state","author","bigText","onBtnClickHandler","event","preventDefault","props","onAddPosts","id","Date","setState","handleChange","currentTarget","value","validate","trim","this","className","onChange","placeholder","onClick","disabled","React","Component","Message","visible","setClassAuthor","counter","setClassPost","handleReadMoreClick","split","data","text","slice","cropAuthor","href","Chat","renderPosts","prevName","length","map","item","key","postId","Contacts","list","listCopy","isLoaded","searchText","renderContacts","user","login","phone","src","alt","handleSearch","filteredList","filter","nameArr","i","RegExp","test","hideContacts","windowWidth","document","documentElement","clientWidth","contactsElem","querySelector","classList","add","getChatData","checkStatus","fetch","then","response","json","setTimeout","name","catch","err","loadChat","type","autoComplete","User","hideUser","addEventListener","parentElem","target","closest","burgerElem","userElem","clickEvent","Event","bubbles","dispatchEvent","formatPhone","Fragment","residence","Button","handleBtnClick","toggle","changeBtnStyle","resizeEvent","window","buttonElem","contains","style","backgroundColor","color","Header","transform","chatWith","contactsStatus","handleBurger","Loading","Error","Authorization","warning","loading","phoneInputPos","keyName","timerId","callPhoneChange","validatePhone","handleLoginInput","hideStatusText","handlePhoneInput","shift","posStart","selectionStart","replaceSymbol","phoneMatch","match","countDigits","writeWarning","padEnd","phoneLength","str","pos","strArr","join","handlePhoneFocus","phoneInput","selectionEnd","setInterval","selLength","handlePhoneBlur","phoneInputElem","clearInterval","handleKeyDown","posEnd","phoneArr","dotsArr","push","splice","restorePhoneTemp","handleMouseDown","handlePhoneClick","message","getUserData","authorization","getAuthorizationData","findUser","startDotsAnimation","dotsGroup","dotsElems","querySelectorAll","sendElem","display","nextDot","prevDot","createStatusText","onInput","onFocus","onBlur","onKeyDown","onMouseDown","App","posts","chatStatus","userStatus","spinSettings","switcher","borderColor","person","filteredData","authorId","recipientId","sortArr","highlightContact","handleAddPosts","nextPosts","chatElem","getElementsByClassName","scrollTop","scrollHeight","elem","innerHTML","arr","prevItem","nextItem","j","personId","contactsItemElems","personNameElems","border","getContactsStatus","status","runSpinner","spinner","resizeWindow","windowHeight","clientHeight","containerElem","height","infoElem","contactsListElem","contactsListCoords","getBoundingClientRect","top","contentElem","maxWidth","remove","onresize","statusText","filteredPosts","Array","isArray","forEach","replace","Boolean","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3f5f8189.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// добавляет новость с помощью формы\r\nclass Add extends React.Component {\r\n\tstate = {\r\n\t\tauthor: 'Butters',\r\n\t\tbigText: ''\r\n\t};\r\n\r\n\t// создаёт новый объект и меняет состояние внутри App\r\n\tonBtnClickHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst {author, bigText} = this.state;\r\n\r\n\t\t// получаем функцию из App,\r\n\t\t// которая сохраняет доступ к состоянию внутри App через замыкание\r\n\t\tthis.props.onAddPosts({\r\n\t\t\tid: +new Date(),\r\n\t\t\tauthor,\r\n\t\t\tbigText\r\n\t\t});\r\n\r\n\t\tthis.setState({bigText: ''}); // очистить поле ввода после отправки\r\n\t};\r\n\r\n\t// отслеживает изменение поля для ввода текста\r\n\thandleChange = (event) => {\r\n\t\tconst {id, value} = event.currentTarget;\r\n\t\tthis.setState({[id]: value});\r\n\t};\r\n\r\n\t// активирует кнопку отправки сообщения\r\n\tvalidate = () => {\r\n\t\tconst {author, bigText} = this.state;\r\n\r\n\t\tif (author.trim() && bigText.trim()) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false; // деактивировать кнопку\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {bigText} = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div className='add'>\r\n\t\t\t\t<form className='add__form'>\r\n\t\t\t\t\t<div className=\"add__input\">\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tid='bigText'\r\n\t\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\t\tclassName='add__text'\r\n\t\t\t\t\t\t\tplaceholder='Type your message'\r\n\t\t\t\t\t\t\tvalue={bigText}\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"add__send\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='add__btn'\r\n\t\t\t\t\t\t\tonClick={this.onBtnClickHandler}\r\n\t\t\t\t\t\t\tdisabled={!this.validate()}>\r\n\t\t\t\t\t\t\tSend\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {Add};","import React from 'react'\r\n\r\n// формирует сообщение из полученного от Chat объекта\r\nclass Message extends React.Component {\r\n\tstate = {\r\n\t\tvisible: false\r\n\t};\r\n\r\n\t// определяют очерёдность сообщений\r\n\tsetClassAuthor = () => {\r\n\t\tconst counter = this.props.counter;\r\n\r\n\t\tif (counter % 2 === 0) {\r\n\t\t\treturn 'message__author-left';\r\n\t\t} else {\r\n\t\t\treturn 'message__author-right';\r\n\t\t}\r\n\t};\r\n\r\n\tsetClassPost = () => {\r\n\t\tconst counter = this.props.counter;\r\n\r\n\t\tif (counter % 2 === 0) {\r\n\t\t\treturn 'message__post-left';\r\n\t\t} else {\r\n\t\t\treturn 'message__post-right';\r\n\t\t}\r\n\t};\r\n\r\n\t// обрабатывает раскрытие и скрытие текста\r\n\thandleReadMoreClick = (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tthis.setState((state) => ({\r\n\t\t\tvisible: !state.visible\r\n\t\t}));\r\n\t};\r\n\r\n\t// сократить имя для показа в чате\r\n\tcropAuthor(author) {\r\n\t\treturn author.split(' ')[0].trim();\r\n\t}\r\n\r\n\trender() {\r\n\t\tlet {author, bigText} = this.props.data; // извлекаем данные из объекта\r\n\t\tconst {visible} = this.state;\r\n\r\n\t\tlet text = bigText.slice(0, 300); // показываем первые 300 символов\r\n\t\tbigText = bigText.slice(300);\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"message\">\r\n\t\t\t\t<div className={this.setClassAuthor()}>\r\n\t\t\t\t\t{this.cropAuthor(author)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={this.setClassPost()}>\r\n\t\t\t\t\t<span className=\"message__text\">\r\n\t\t\t\t\t\t{text}\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t{visible &&\r\n\t\t\t\t\t\t<span className=\"message__big-text\">\r\n\t\t\t\t\t\t\t{bigText}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{!visible && bigText &&\r\n\t\t\t\t\t\t<div className=\"message__readmore\">\r\n\t\t\t\t\t\t\t<a onClick={this.handleReadMoreClick}\r\n\t\t\t\t\t\t\t\t href=\"#\">show more</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t{visible &&\r\n\t\t\t\t\t\t<div className=\"message__hide\">\r\n\t\t\t\t\t\t\t<a onClick={this.handleReadMoreClick}\r\n\t\t\t\t\t\t\t\t href=\"#\">hide</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {Message};","import React from 'react'\r\n\r\nimport {Message} from './Message.js'\r\n\r\n// обрабатывает массив с сообщениями\r\nclass Chat extends React.Component {\r\n\r\n\trenderPosts = () => {\r\n\t\tconst {data} = this.props;\r\n\r\n\t\tlet postsTemp = null;\r\n\t\tlet prevName = null; // запомнить имя\r\n\t\tlet counter = 0; // очерёдность сообщений\r\n\r\n\t\t// создаём массив компонентов Message\r\n\t\tif (data.length) {\r\n\t\t\tpostsTemp = data.map(function(item) {\r\n\r\n\t\t\t\tif (prevName === null) prevName = item.author;\r\n\r\n\t\t\t\tif (prevName !== item.author) {\r\n\t\t\t\t\tcounter++;\r\n\t\t\t\t\tprevName = item.author;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn <Message key={item.postId} data={item} counter={counter} />;\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tpostsTemp = (\r\n\t\t\t\t<div className=\"message__no-messages\">\r\n\t\t\t\t\t<div>no messages yet</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\treturn postsTemp;\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst {data} = this.props;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"chat\">\r\n\r\n\t\t\t\t{data.length ? (\r\n\t\t\t\t\t<div className=\"chat__counter\">\r\n\t\t\t\t\t\ttotal posts: {data.length}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : null}\r\n\r\n\t\t\t\t{/* рендерим массив компонентов Message */}\r\n\t\t\t\t{this.renderPosts()}\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {Chat};","import React from 'react'\r\n\r\nclass Contacts extends React.Component {\r\n  state = {\r\n    list: null,\r\n    listCopy: null,\r\n    isLoaded: false,\r\n    searchText: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    const {getChatData, checkStatus, user} = this.props;\r\n\r\n    // загрузить список контактов\r\n    fetch('./data/contactsData.json')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n\r\n        setTimeout(() => {\r\n          this.setState({\r\n            list: data,\r\n            listCopy: data,\r\n            isLoaded: true\r\n          });\r\n\r\n          checkStatus('loaded'); // отправить статус в App\r\n\r\n          // загрузить первый контакт (но не самого пользователя)\r\n          if (data[0].id === user.id) {\r\n            getChatData({\r\n              id: data[1].id,\r\n              name: data[1].author\r\n            });\r\n          } else {\r\n            getChatData({\r\n              id: data[0].id,\r\n              name: data[0].author\r\n            });\r\n          }\r\n\r\n        }, 3000); // задержка загрузки\r\n      })\r\n      .catch(err => checkStatus('error'));\r\n\r\n    this.hideContacts(); // скрыть контакты для маленьких экранов\r\n  }\r\n\r\n  renderContacts = () => {\r\n    let contactsTemp = null;\r\n    const list = this.state.list;\r\n    const {user} = this.props;\r\n\r\n    contactsTemp = list.map(item => {\r\n\r\n      // список контактов кроме самого пользователя\r\n      if (item.login !== user.login && item.phone !== user.phone) {\r\n\r\n        return (\r\n          <div className=\"contacts__item\" key={item.id}>\r\n            <div className=\"contacts__photo\">\r\n              <img src={item.src} alt=\"\" />\r\n            </div>\r\n\r\n            <div className=\"person\">\r\n              <div className=\"person__name\" id={item.id}>\r\n                {item.author}\r\n              </div>\r\n\r\n              <div className=\"status\">\r\n                <div className=\"status__icon\"></div>\r\n                <div className=\"status__title\">online</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    });\r\n\r\n    return contactsTemp;\r\n  };\r\n\r\n  // фильтрация списка контактов\r\n  handleSearch = (event) => {\r\n    const searchText = event.currentTarget.value;\r\n    const listCopy = this.state.listCopy;\r\n\r\n    const filteredList = listCopy.filter((item) => {\r\n\r\n      const nameArr = item.author.split(' '); // имя в виде массива\r\n\r\n      for (let i = 0; i < nameArr.length; i++) {\r\n        const regexp = new RegExp(`^${searchText}`, 'i');\r\n        const compare = regexp.test( nameArr[i].trim() );\r\n\r\n        if (compare) return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n    this.setState({\r\n      searchText,\r\n      list: filteredList\r\n    });\r\n  }\r\n\r\n  // скрыть контакты для маленьких экранов\r\n  hideContacts = () => {\r\n    const windowWidth = document.documentElement.clientWidth;\r\n    const contactsElem = document.querySelector('.contacts');\r\n\r\n    if (windowWidth <= 425) {\r\n      contactsElem.classList.add('hide');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {isLoaded, searchText} = this.state;\r\n    const loadChat = this.props.loadChat;\r\n\r\n    return (\r\n      <div className=\"contacts\" onClick={loadChat}>\r\n        <div className=\"search\">\r\n          <input\r\n            className=\"search__input\"\r\n            onChange={this.handleSearch}\r\n            type=\"text\"\r\n            placeholder=\"search\"\r\n            value={searchText}\r\n            autoComplete=\"off\" />\r\n          <div className=\"search__icon\">\r\n            <img src=\"./data/images/search.svg\" alt=\"search\" />\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"contacts__list\">\r\n          {isLoaded && this.renderContacts()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Contacts};","import React from 'react'\r\n\r\nclass User extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.hideUser(); // запустить обработчик скрытия\r\n  }\r\n\r\n  // закрывает .user при клике вне блока и бургера\r\n  hideUser = () => {\r\n    document.addEventListener('click', function(event) {\r\n      const parentElem = event.target.closest('.user');\r\n      const burgerElem = event.target.closest('.header__burger');\r\n      const userElem = document.querySelector('.user.show');\r\n\r\n      if (!parentElem && !burgerElem && userElem) {\r\n        const clickEvent = new Event('click', {bubbles: true}); // обязательно всплытие bubbles\r\n        document.querySelector('.header__burger').dispatchEvent(clickEvent); // вызов анимации\r\n      }\r\n    });\r\n  };\r\n\r\n  // формат номера телефона\r\n  formatPhone = (phone) => {\r\n    const str1 = `+${phone.slice(0, 1)} (${phone.slice(1, 4)})`;\r\n    const str2 = ` ${phone.slice(4, 7)}-${phone.slice(7)}`;\r\n\r\n    return str1 + str2;\r\n  };\r\n\r\n  render() {\r\n    const {user} = this.props;\r\n\r\n    return (\r\n      <div className=\"user\">\r\n\r\n        {user &&\r\n          <React.Fragment>\r\n            <div className=\"user__info\">\r\n              <div className=\"user__photo\">\r\n                <img src={user.src} alt=\"\" />\r\n              </div>\r\n\r\n              <div className=\"user__title\">\r\n                <div className=\"user__name\">Butters</div>\r\n                <div className=\"user__city\">\r\n                  <img src=\"./data/images/user-icons/home.svg\" />\r\n                  {user.residence}\r\n                </div>\r\n                <div className=\"user__tel\">\r\n                  <img src=\"./data/images/user-icons/telephone.svg\" />\r\n                  {this.formatPhone(user.phone)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"user__options\">\r\n              <a className=\"user__contacts\" href=\"#\">\r\n                <img src=\"./data/images/user-icons/contacts.svg\" />\r\n                Contacts\r\n              </a>\r\n              <a className=\"user__favorite\" href=\"#\">\r\n                <img src=\"./data/images/user-icons/favorite.svg\" />\r\n                Favorite\r\n              </a>\r\n              <a className=\"user__settings\" href=\"#\">\r\n                <img src=\"./data/images/user-icons/settings.svg\" />\r\n                Settings\r\n              </a>\r\n              <a className=\"user__invite\" href=\"#\">\r\n                <img src=\"./data/images/user-icons/invite.svg\" />\r\n                Invite friends\r\n              </a>\r\n              <a className=\"user__help\" href=\"#\">\r\n                <img src=\"./data/images/user-icons/help.svg\" />\r\n                Help\r\n              </a>\r\n            </div>\r\n          </React.Fragment>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {User};","import React from 'react'\r\n\r\nclass Button extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.changeBtnStyle(); // начальный стиль кнопки\r\n  }\r\n\r\n  // скрыть или показать список контактов\r\n  // адаптировать блоки по ширине\r\n  handleBtnClick = () => {\r\n    const contactsElem = document.querySelector('.contacts');\r\n    contactsElem.classList.toggle('hide');\r\n\r\n    this.changeBtnStyle(); // изменить стиль кнопки\r\n\r\n    // адаптировать блоки\r\n    const resizeEvent = new Event('resize', {bubbles: true});\r\n    window.dispatchEvent(resizeEvent);\r\n  };\r\n\r\n  // изменить стиль кнопки после нажатия\r\n  changeBtnStyle = () => {\r\n    const contactsElem = document.querySelector('.contacts');\r\n    const buttonElem = document.querySelector('.button');\r\n\r\n    if (contactsElem.classList.contains('hide')) {\r\n      buttonElem.style.backgroundColor = '#fff';\r\n      buttonElem.style.color = '#434753';\r\n    } else {\r\n      buttonElem.style.backgroundColor = '#434753';\r\n      buttonElem.style.color = '#fff';\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"button\" onClick={this.handleBtnClick}>\r\n        Contacts\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Button};","import React from 'react'\r\n\r\nimport {User} from './User.js'\r\nimport {Button} from './Button.js'\r\n\r\nclass Header extends React.Component {\r\n\r\n  // анимация элемента burger\r\n\thandleBurger(event) {\r\n    const userElem = document.querySelector('.user');\r\n    userElem.classList.toggle('show');\r\n\r\n    if (userElem.classList.contains('show')) {\r\n      event.currentTarget.style.transform = 'rotate(180deg)';\r\n    } else {\r\n      event.currentTarget.style.transform = '';\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {chatWith, contactsStatus, user} = this.props;\r\n\r\n    return (\r\n      <div className=\"header\">\r\n\r\n        {(contactsStatus === 'loaded') &&\r\n          <React.Fragment>\r\n            <div className=\"header__left\">\r\n              <img\r\n                className=\"header__burger\"\r\n                src=\"data/images/burger.svg\"\r\n                alt=\"burger\"\r\n                onClick={this.handleBurger} />\r\n              <div className=\"header__title\">Header</div>\r\n              <Button />\r\n            </div>\r\n\r\n            {chatWith &&\r\n              <div className=\"header__right\">\r\n                Chat with:<br />\r\n                <span className=\"header__chat-with\">{chatWith}</span>\r\n              </div>\r\n            }\r\n\r\n            <User\r\n              user={user}\r\n            />\r\n          </React.Fragment>\r\n        }\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Header};","import React from 'react'\r\n\r\nclass Loading extends React.Component {\r\n\r\n  render() {\r\n    const {text} = this.props;\r\n\r\n    return (\r\n      <div className=\"loading\">\r\n        <div className=\"loading__spinner\">\r\n          <div className=\"loading__icon\"></div>\r\n          <div className=\"loading__title\">{text}</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Loading};","import React from 'react'\r\n\r\nclass Error extends React.Component {\r\n\r\n  render() {\r\n    const {text} = this.props;\r\n\r\n    return (\r\n      <div className=\"error\">\r\n        <div className=\"error__title\">\r\n          {text}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Error};","import React from 'react'\r\n\r\n// отвечает за получение данных от пользователя\r\nclass Authorization extends React.Component {\r\n\r\n  state = {\r\n    login: '@Butters',\r\n    phone: '11235155115',\r\n    warning: '',\r\n    loading: ''\r\n  };\r\n\r\n  phoneInputPos = null;\r\n\r\n  keyName = '';\r\n\r\n  timerId = null;\r\n\r\n  componentDidMount() {\r\n    this.callPhoneChange();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // установить текущую позицию курсора\r\n    const phoneInputElem = document.querySelector('.authorization__phone');\r\n    phoneInputElem.selectionStart = phoneInputElem.selectionEnd = this.phoneInputPos;\r\n  }\r\n\r\n  // проверка номера при первом запуске страницы\r\n  callPhoneChange = () => {\r\n    const phoneInputElem = document.querySelector('.authorization__phone');\r\n    const phone = phoneInputElem.value;\r\n\r\n    this.validatePhone(phone, 0);\r\n  };\r\n\r\n  // обработка ввода логина\r\n  handleLoginInput = (event) => {\r\n    const login = event.currentTarget.value;\r\n\r\n    this.hideStatusText(); // обнулить состояние загрузки\r\n\r\n    this.setState({login});\r\n  };\r\n\r\n  // обработка ввода номера\r\n  handlePhoneInput = (event) => {\r\n    const phone = event.currentTarget.value;\r\n\r\n    // при вводе сдвиг идёт по умолчанию\r\n    this.validatePhone(phone, 0);\r\n  };\r\n\r\n  // проверка соответствия шаблону и изменение состояния\r\n  validatePhone = (phone, shift) => {\r\n    const phoneInputElem = document.querySelector('.authorization__phone');\r\n    let posStart = phoneInputElem.selectionStart;\r\n\r\n    const key = this.keyName; // нажатая клавиша\r\n\r\n    this.hideStatusText(); // обнулить состояние загрузки\r\n\r\n    // +. (...) ...-....\r\n    const regexp = /\\+([\\d.]*) \\(([\\d.]*)\\) ([\\d.]*)-([\\d.]*)$/;\r\n\r\n    // позиция курсора при первом запуске\r\n    if (this.phoneInputPos === null) {\r\n      posStart = 1;\r\n    }\r\n\r\n    // обработка стандартного ввода\r\n    if (key !== 'Backspace' && key !== 'Delete') {\r\n\r\n      // удалить следующий символ (кроме первого запуска)\r\n      if (this.phoneInputPos !== null) {\r\n        phone = this.replaceSymbol(phone, posStart);\r\n      }\r\n    }\r\n\r\n    // проверяем соответствие шаблону\r\n    const phoneMatch = phone.match(regexp);\r\n\r\n    // валидация не прошла успешно\r\n    if (!phoneMatch) {\r\n\r\n      // запомнить позицию до ввода при ошибке\r\n      this.phoneInputPos = posStart - 1;\r\n\r\n      // введено не число\r\n      if (!(this.countDigits(key) === key.length)) {\r\n        this.writeWarning('numbers should be entered');\r\n      }\r\n\r\n      // нужен рендеринг, чтобы установить позицию\r\n      this.setState((state) => {\r\n\r\n        // если хватает цифр\r\n        if (this.countDigits(state.phone) === 11) {\r\n          this.writeWarning('number has entered correctly');\r\n        }\r\n\r\n        return {phone: state.phone}; // оставить старое значение\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    // валидация прошла успешно\r\n    phone = '';\r\n\r\n    // извлекаем номер из шаблона через скобочные группы\r\n    for (let i = 1; i < phoneMatch.length; i++) {\r\n\r\n      if (i === 1) {\r\n        phone += phoneMatch[i].slice(0, 1).padEnd(1, '.');\r\n      }\r\n\r\n      if (i === 2 || i === 3) {\r\n        phone += phoneMatch[i].slice(0, 3).padEnd(3, '.');\r\n      }\r\n\r\n      if (i === 4) {\r\n        phone += phoneMatch[i].slice(0, 4).padEnd(4, '.');\r\n      }\r\n    }\r\n\r\n    const phoneLength = this.countDigits(phone); // сколько содержит цифр\r\n\r\n    if (phoneLength === 11) {\r\n      this.writeWarning('number has entered correctly');\r\n    } else if (phoneLength === 10) {\r\n      this.writeWarning('1 digit left to enter');\r\n    } else {\r\n      this.writeWarning(`${11 - phoneLength} digits left to enter`);\r\n    }\r\n\r\n    // сдвиг позиции курсора после ввода или удаления\r\n    this.phoneInputPos = posStart + shift;\r\n\r\n    this.setState({phone});\r\n  };\r\n\r\n  // удалить следующий символ после ввода\r\n  replaceSymbol = (str, pos) => {\r\n    const strArr = str.split('');\r\n\r\n    strArr[pos] = '';\r\n    str = strArr.join('');\r\n\r\n    return str;\r\n  };\r\n\r\n  // устанавливает курсор на определённую позицию\r\n  handlePhoneFocus = (event) => {\r\n    const phoneInput = event.currentTarget;\r\n\r\n    // чтобы сработало после события click\r\n    setTimeout(() => {\r\n      phoneInput.selectionStart = phoneInput.selectionEnd = this.phoneInputPos;\r\n    }, 0);\r\n\r\n\r\n    // цикличный счётчик позиций курсора\r\n    this.timerId = setInterval(() => {\r\n      const pos = phoneInput.selectionStart;\r\n      const selLength = phoneInput.selectionEnd - phoneInput.selectionStart;\r\n\r\n      const key = this.keyName;\r\n\r\n      // не считать позиции при выделении и нажатии кнопки мыши\r\n      if (key === 'MouseDown' || selLength > 0) {\r\n        return;\r\n      }\r\n\r\n      // начальная позиция курсора\r\n      if (pos === 0) {\r\n        phoneInput.selectionStart = phoneInput.selectionEnd = 1;\r\n      }\r\n\r\n      // движение в обратном направлении\r\n      if (key === 'ArrowLeft') {\r\n\r\n        if (pos === 2 || pos === 3) {\r\n          phoneInput.selectionStart = phoneInput.selectionEnd = 1;\r\n        }\r\n\r\n        if (pos === 7 || pos === 8) {\r\n          phoneInput.selectionStart = phoneInput.selectionEnd = 6;\r\n        }\r\n\r\n        if (pos === 12) {\r\n          phoneInput.selectionStart = phoneInput.selectionEnd = 11;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      if (key === 'Backspace') {\r\n\r\n        if (pos === 3 || pos === 4) {\r\n          phoneInput.selectionStart = phoneInput.selectionEnd = 2;\r\n        }\r\n\r\n        if (pos === 9) {\r\n          phoneInput.selectionStart = phoneInput.selectionEnd = 7;\r\n        }\r\n\r\n        if (pos === 13) {\r\n          phoneInput.selectionStart = phoneInput.selectionEnd = 12;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      // движение вперёд (по умолчанию)\r\n      if (pos === 2 || pos === 3) {\r\n        phoneInput.selectionStart = phoneInput.selectionEnd = 4;\r\n      }\r\n\r\n      if (pos === 7 || pos === 8) {\r\n        phoneInput.selectionStart = phoneInput.selectionEnd = 9;\r\n      }\r\n\r\n      if (pos === 12) {\r\n        phoneInput.selectionStart = phoneInput.selectionEnd = 13;\r\n      }\r\n\r\n    }, 20);\r\n  };\r\n\r\n  // обрабатывает деактивацию элемента input\r\n  handlePhoneBlur = (event) => {\r\n    const phoneInputElem = event.currentTarget;\r\n\r\n    this.phoneInputPos = phoneInputElem.selectionStart;\r\n\r\n    // остановить считывание позиций\r\n    clearInterval(this.timerId);\r\n  };\r\n\r\n  // вставка точки после удаления символа\r\n  handleKeyDown = (event) => {\r\n    const key = event.key;\r\n    const phone = event.currentTarget.value;\r\n\r\n    const posStart = event.currentTarget.selectionStart;\r\n    const posEnd = event.currentTarget.selectionEnd;\r\n    const selLength = posEnd - posStart;\r\n\r\n    const phoneArr = phone.split('');\r\n\r\n    const dotsArr = []; // затем разворачивается в список аргументов\r\n\r\n    this.keyName = key; // запомнить нажатую кнопку\r\n\r\n    if (key === '.' || key === 'Backspace' || key === 'Delete') {\r\n      event.preventDefault();\r\n    }\r\n\r\n    // заменить удаляемый фрагмент точками\r\n    if (selLength > 0) {\r\n      for (let i = 0; i < selLength; i++) {\r\n        dotsArr.push('.');\r\n      }\r\n    }\r\n\r\n    if (key === 'Backspace') {\r\n\r\n      if (posStart === posEnd) {\r\n        phoneArr.splice(posStart - 1, 1, '.');\r\n\r\n        this.restorePhoneTemp(phoneArr); // восстановить элементы шаблона\r\n\r\n        // удаление одного символа - сдвиг влево\r\n        this.validatePhone(phoneArr.join(''), -1);\r\n      } else {\r\n        phoneArr.splice(posStart, selLength, ...dotsArr);\r\n\r\n        this.restorePhoneTemp(phoneArr); // передача массива по ссылке\r\n\r\n        // удаление выделенного фрагмента - остаться в начале\r\n        this.validatePhone(phoneArr.join(''), 0);\r\n      }\r\n    }\r\n\r\n    if (key === 'Delete') {\r\n\r\n      if (posStart === posEnd) {\r\n        phoneArr.splice(posStart, 1, '.');\r\n      } else {\r\n        phoneArr.splice(posStart, selLength, ...dotsArr);\r\n      }\r\n\r\n      this.restorePhoneTemp(phoneArr);\r\n\r\n      // в обоих случаях остаться в начале\r\n      this.validatePhone(phoneArr.join(''), 0);\r\n    }\r\n  };\r\n\r\n  // начинает выделение\r\n  handleMouseDown = () => {\r\n    this.keyName = 'MouseDown'; // приостанавливает счёт позиций\r\n  };\r\n\r\n  // установить стандартное перемещение по шаблону (вперёд)\r\n  handlePhoneClick = () => {\r\n    this.keyName = '';\r\n  };\r\n\r\n  // восстановить элементы шаблона после удаления (через массив)\r\n  restorePhoneTemp = (phoneArr) => {\r\n    phoneArr[0] = '+';\r\n    phoneArr[2] = ' ';\r\n    phoneArr[3] = '(';\r\n    phoneArr[7] = ')';\r\n    phoneArr[8] = ' ';\r\n    phoneArr[12] = '-';\r\n  };\r\n\r\n  // сообщение о правильности ввода номера\r\n  writeWarning = (message) => {\r\n    this.setState({\r\n      warning: message\r\n    });\r\n  };\r\n\r\n  // +. (...) ...-....\r\n  formatPhone = (phone) => {\r\n\r\n    phone = phone.padEnd(11, '.');\r\n\r\n    const str1 = `+${phone.slice(0, 1)} (${phone.slice(1, 4)})`;\r\n    const str2 = ` ${phone.slice(4, 7)}-${phone.slice(7)}`;\r\n\r\n    return str1 + str2;\r\n  };\r\n\r\n  // подсчёт цифр в строке\r\n  countDigits = (phone) => {\r\n    const regexp = /\\d/g;\r\n    const phoneMatch = phone.match(regexp);\r\n\r\n    if (phoneMatch) {\r\n      return phoneMatch.length;\r\n    } else {\r\n      return 0;\r\n    }\r\n  };\r\n\r\n  // получить данные о пользователе\r\n  getUserData = (event) => {\r\n\r\n    event.preventDefault();\r\n\r\n    const {login, phone, loading} = this.state;\r\n    const authorization = {login, phone};\r\n\r\n    // не нажимать повторно во время загрузки\r\n    if (loading === 'progress') {\r\n      return;\r\n    }\r\n\r\n    const findUser = (data, authorization) => {\r\n\r\n      for (let i = 0; i < data.length; i++) {\r\n        const user = data[i];\r\n  \r\n        if (user.login === authorization.login &&\r\n          user.phone === authorization.phone) {\r\n          return user;\r\n        }\r\n      }\r\n    };\r\n\r\n    // отправить запрос\r\n    const {getAuthorizationData} = this.props;\r\n\r\n    fetch('./data/contactsData.json')\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n\r\n        setTimeout(() => {\r\n          const user = findUser(data, authorization);\r\n\r\n          // пользователь не найден\r\n          if (!user) {\r\n            this.setState({loading: 'error'});\r\n            return;\r\n          }\r\n\r\n          const userStatus = 'loaded';\r\n\r\n          this.setState({loading: ''}); // остановить анимацию\r\n\r\n          getAuthorizationData(user, userStatus); // передать в App\r\n\r\n        }, 5000); // задержка загрузки\r\n      })\r\n      .catch(err => this.setState({loading: 'error'}));\r\n\r\n    this.startDotsAnimation(); // начать анимацию загрузки\r\n  };\r\n\r\n  // анимация загрузки внутри кнопки\r\n  startDotsAnimation = () => {\r\n    const dotsGroup = document.querySelector('.authorization__dots-group');\r\n    const dotsElems = document.querySelectorAll('.authorization__dots');\r\n    const sendElem = document.querySelector('.authorization__send');\r\n\r\n    dotsGroup.style.display = 'flex'; // показать\r\n    sendElem.style.display = 'none'; // скрыть\r\n\r\n    // вернуть стартовые настройки\r\n    for (let i = 0; i < dotsElems.length; i++) {\r\n      dotsElems[i].style.transform = '';\r\n    }\r\n\r\n    this.setState({loading: 'progress'}); // переводим в режим загрузки\r\n\r\n    let nextDot = 1;\r\n    let prevDot = 0;\r\n\r\n    dotsElems[0].style.transform = 'scale(1.7, 1.7)';\r\n\r\n    // цикл анимации\r\n    const timerId = setInterval(() => {\r\n\r\n      const {loading} = this.state;\r\n\r\n      if (loading !== 'progress') {\r\n\r\n        dotsGroup.style.display = 'none';\r\n        sendElem.style.display = '';\r\n\r\n        clearInterval(timerId);\r\n        return;\r\n      }\r\n\r\n      if (nextDot > 3) {\r\n        nextDot = 0;\r\n      }\r\n\r\n      dotsElems[prevDot].style.transform = '';\r\n      dotsElems[nextDot].style.transform = 'scale(1.7, 1.7)';\r\n\r\n      prevDot = nextDot;\r\n      nextDot++;\r\n    }, 1000);\r\n  };\r\n\r\n  // сообщение о состоянии загрузки\r\n  createStatusText = (loading) => {\r\n\r\n    if (loading === 'progress') {\r\n      return 'loading in progress...';\r\n    }\r\n\r\n    if (loading === 'error') {\r\n      return 'Error: check login and phone number';\r\n    }\r\n  };\r\n\r\n  // закрыть сообщение об ошибке\r\n  hideStatusText = () => {\r\n    const {loading} = this.state;\r\n\r\n    if (loading === 'error') {\r\n      this.setState({loading: ''});\r\n    }\r\n  };\r\n\r\n  render() {\r\n\r\n    const {login, phone, warning, loading} = this.state;\r\n\r\n    return (\r\n      <div className=\"authorization\">\r\n        <form className=\"authorization__form\">\r\n\r\n          <label>\r\n            <span className=\"authorization__label\">Login:</span>\r\n            <input\r\n              className=\"authorization__login\"\r\n              type=\"text\"\r\n              onChange={this.handleLoginInput}\r\n              value={login}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            <span className=\"authorization__label\">Phone number:</span>\r\n            <input\r\n              className=\"authorization__phone\"\r\n              type=\"text\"\r\n              onInput={this.handlePhoneInput}\r\n              onFocus={this.handlePhoneFocus}\r\n              onBlur={this.handlePhoneBlur}\r\n              onKeyDown={this.handleKeyDown}\r\n              onMouseDown={this.handleMouseDown}\r\n              onClick={this.handlePhoneClick}\r\n              value={this.formatPhone(phone)}\r\n            />\r\n          </label>\r\n\r\n          {loading === '' &&\r\n            <div className=\"authorization__warning\">{warning}</div>\r\n          }\r\n\r\n          <div className=\"authorization__loading\">\r\n            {this.createStatusText(loading)}\r\n          </div>\r\n\r\n          <button\r\n            className=\"authorization__button\"\r\n            onClick={this.getUserData}>\r\n            <span className=\"authorization__send\">Send</span>\r\n            <div className=\"authorization__dots-group\">\r\n              <span className=\"authorization__dots\"></span>\r\n              <span className=\"authorization__dots\"></span>\r\n              <span className=\"authorization__dots\"></span>\r\n              <span className=\"authorization__dots\"></span>\r\n            </div>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport {Authorization};","import React from 'react'\nimport './App.css'\n\nimport {Add} from './components/Add.js'\nimport {Chat} from './components/Chat.js'\nimport {Contacts} from './components/Contacts.js'\nimport {Header} from './components/Header.js'\nimport {Loading} from './components/Loading.js'\nimport {Error} from './components/Error.js'\nimport {Authorization} from './components/Authorization.js'\n\n\nclass App extends React.Component {\n\tstate = {\n\t\tposts: null,\n\t\tcontactsStatus: '',\n\t\tchatStatus: '',\n\t\tuserStatus: '',\n\t\tuser: null\n\t};\n\n\tchatWith = ''; // имя собеседника\n\n\t// запоминаем настройки анимации спиннера\n\tspinSettings = {\n\t\ttimerId: null,\n\t\tpos: 0,\n\t\tswitcher: true,\n\t\tborderColor: '#434753'\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.runSpinner(); // запуск анимации загрузки\n\n\t\tthis.resizeWindow(); // адаптация элементов\n\t\twindow.onresize = this.resizeWindow;\n\n\t\twindow.addEventListener('orientationchange', () => {\n\t\t\tthis.resizeWindow();\n\t\t});\n\t}\n\n\tcomponentDidUpdate() {\n\t\tclearInterval(this.spinSettings.timerId); // остановить старый спиннер\n\t\tthis.spinSettings.timerId = null;\n\t\tthis.runSpinner(); // запуск нового спиннера\n\n\t\tthis.resizeWindow();\n\t}\n\n\t// фильтр спама на слово wow\n\tstatic getDerivedStateFromProps(props, state) {\n\t\tlet filteredPosts;\n\n\t\tif (Array.isArray(state.posts)) {\n\t\t\tfilteredPosts = [...state.posts]; // копия массива\n\n\t\t\tfilteredPosts.forEach((item) => {\n\t\t\t\titem.bigText = item.bigText.replace(/\\bwow\\b/gi, '<spam>');\n\t\t\t});\n\n\t\t\treturn {posts: filteredPosts};\n\t\t}\n\n\t\treturn null;\n\t}\n\n\t// получить данные для чата\n\t// вызывается в том числе из Contacts для загрузки по умолчанию\n\tgetChatData = (person) => {\n\n\t\tfetch('./data/chatData.json')\n\t\t\t.then(response => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(data => {\n\n\t\t\t\tconst {user} = this.state;\n\n\t\t\t\tconst filteredData = data.filter((item) => {\n\n\t\t\t\t\tif ((item.authorId === user.id && item.recipientId === person.id) ||\n\t\t\t\t\t\t(item.authorId === person.id && item.recipientId === user.id)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tthis.sortArr(filteredData); // сортировка по возрастанию\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.chatWith = person.name; // получить имя до рендеринга\n\t\t\t\t\tthis.highlightContact(person.id); // выделить собеседника\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tposts: filteredData,\n\t\t\t\t\t\tchatStatus: 'loaded'\n\t\t\t\t\t});\n\t\t\t\t}, 3000); // задержка загрузки\n\t\t\t})\n\t\t\t.catch(err => this.setState({chatStatus: 'error'}));\n\t};\n\n\t// добавление нового объекта (сообщения)\n\thandleAddPosts = (data) => {\n\t\tconst nextPosts = [...this.state.posts, data];\n\t\tthis.setState({posts: nextPosts});\n\n\t\tsetTimeout(function() {\n\t\t\tconst chatElem = document.getElementsByClassName('chat')[0]; // прокрутить вниз чат\n\t\t\tchatElem.scrollTop = chatElem.scrollHeight;\n\t\t}, 0);\n\t};\n\n\t// загрузка чата по выбранному имени (передаётся в Contacts)\n\tloadChat = (event) => {\n\t\tconst parentElem = event.target.closest('.contacts__item');\n\n\t\tif (parentElem) {\n\t\t\tconst elem = parentElem.querySelector('.person__name');\n\n\t\t\tconst id = +elem.id;\n\t\t\tconst name = elem.innerHTML;\n\n\t\t\tthis.setState({chatStatus: ''}); // запустить анимацию загрузки\n\n\t\t\tthis.getChatData({id, name}); // загрузить чат по id собеседника\n\t\t}\n\t};\n\n\t// отсортировать массив по возрастанию\n\tsortArr = (arr) => {\n\n\t\tlet prevItem;\n\t\tlet nextItem;\n\n\t\tfor (let i = 0; i < arr.length; i++) {\n\n\t\t\tfor (let j = 0; j < arr.length - 1; j++) {\n\n\t\t\t\tprevItem = arr[j].postId;\n\t\t\t\tnextItem = arr[j + 1].postId;\n\n\t\t\t\tif (nextItem < prevItem) {\n\t\t\t\t\tarr[j] = nextItem;\n\t\t\t\t\tarr[j + 1] = prevItem;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t// выделить собеседника\n\thighlightContact = (personId) => {\n\n\t\tconst contactsItemElems = document.querySelectorAll('.contacts__item');\n\t\tconst personNameElems = document.querySelectorAll('.person__name');\n\n\t\tfor (let i = 0; i < contactsItemElems.length; i++) {\n\t\t\tcontactsItemElems[i].style.border = ''; // снять выделение\n\t\t}\n\n\t\tfor (let i = 0; i < personNameElems.length; i++) {\n\n\t\t\tif (+personNameElems[i].id === personId) {\n\t\t\t\tconst contactsItemElem = personNameElems[i].closest('.contacts__item');\n\t\t\t\tcontactsItemElem.style.border = '1px solid rgba(105, 108, 117, .3)'; // выделить\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t};\n\n\t// получить состояние загрузки из Contacts\n\tgetContactsStatus = (status) => {\n\t\tthis.setState({contactsStatus: status});\n\t};\n\n\t// запустить анимацию загрузки\n\trunSpinner = () => {\n\t\tconst spinSettings = this.spinSettings;\n\n\t\tif (spinSettings.timerId) return; // уже запущена анимация\n\n\t\tconst arr = ['borderTop', 'borderRight', 'borderBottom', 'borderLeft'];\n\n\t\tlet pos = spinSettings.pos; // позиция цвета\n\t\tlet switcher = spinSettings.switcher;\n\n\t\tconst spinner = document.querySelector('.loading__icon'); // находим спиннер\n\n\t\tif (spinner) {\n\t\t\tspinner.style.borderColor = spinSettings.borderColor;\n\t\t}\n\n\t\tconst timerId = setInterval(() => {\n\n\t\t\tif (!spinSettings.timerId) spinSettings.timerId = timerId;\n\n\t\t\tconst spinner = document.querySelector('.loading__icon');\n\n\t\t\tif (!spinner) {\n\t\t\t\tspinSettings.timerId = null;\n\t\t\t\tclearInterval(timerId);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (pos === 4) {\n\t\t\t\tpos = 0;\n\t\t\t\tswitcher = !switcher;\n\t\t\t}\n\n\t\t\tif (switcher) {\n\t\t\t\tspinner.style[arr[pos]] = '5px solid transparent';\n\t\t\t} else {\n\t\t\t\tspinner.style[arr[pos]] = '5px solid #434753';\n\t\t\t}\n\n\t\t\tpos++;\n\n\t\t\tspinSettings.pos = pos; // запомнить настройки\n\t\t\tspinSettings.switcher = switcher;\n\t\t\tspinSettings.borderColor = spinner.style.borderColor;\n\n\t\t}, 1000);\n\n\t\treturn;\n\t};\n\n\t// создаёт компонент для ошибки и загрузки\n\tcreateStatusText(contactsStatus, chatStatus) {\n\n\t\tlet statusText = '';\n\n\t\tif (contactsStatus === 'error') {\n\t\t\tstatusText = 'Contacts loading error...';\n\t\t\treturn (<Error text={statusText} />);\n\n\t\t} else if (chatStatus === 'error') {\n\t\t\tstatusText = 'Chat loading error...';\n\t\t\treturn (<Error text={statusText} />);\n\n\t\t} else if (contactsStatus === '') {\n\t\t\tstatusText = 'Contacts loading...';\n\t\t\treturn (<Loading text={statusText} />);\n\n\t\t} else if (contactsStatus === 'loaded' && chatStatus === '') {\n\t\t\tstatusText = 'Chat loading...';\n\t\t\treturn (<Loading text={statusText} />);\n\n\t\t}\n\t}\n\n\t// адаптация элементов при изменении размеров окна\n\tresizeWindow = () => {\n\n\t\tconst windowWidth = document.documentElement.clientWidth; // ширина окна\n\t\tconst windowHeight = document.documentElement.clientHeight; // высота окна\n\t\tconst containerElem = document.querySelector('.container');\n\n\t\tcontainerElem.style.height = windowHeight + 'px'; // по высоте экрана\n\n\t\t// адаптировать блок .info по высоте экрана\n\t\tconst infoElem = document.querySelector('.info');\n\n\t\tif (!infoElem) return;\n\n\t\tinfoElem.style.height = `${containerElem.clientHeight - 50}px`;\n\n\t\t// адаптировать блок .user по высоте экрана при ландшафтной ориентации\n\t\tconst userElem = document.querySelector('.user');\n\n\t\tif (userElem) {\n\n\t\t\tif (windowHeight <= 500 || windowWidth <= 425) {\n\t\t\t\tuserElem.style.height = `${infoElem.clientHeight}px`;\n\t\t\t} else if (windowHeight > 500 || windowWidth > 425) {\n\t\t\t\tuserElem.style.height = 'auto';\n\t\t\t}\n\t\t}\n\n\t\t// адаптировать список контактов по высоте .container\n\t\tconst contactsListElem = document.querySelector('.contacts__list');\n\t\tconst contactsListCoords = contactsListElem.getBoundingClientRect();\n\n\t\tcontactsListElem.style.height = `${containerElem.clientHeight - contactsListCoords.top}px`;\n\n\t\t// адаптировать ширину чата при скрытых контактах\n\t\tconst contactsElem = document.querySelector('.contacts');\n\t\tconst contentElem = document.querySelector('.content');\n\n\t\tif (windowWidth > 768) {\n\n\t\t\tif (userElem) {\n\n\t\t\t\tif (contactsElem.classList.contains('hide')) {\n\t\t\t\t\tcontainerElem.style.maxWidth = '800px';\n\t\t\t\t\tcontentElem.classList.add('content--full');\n\t\t\t\t\tuserElem.classList.add('user--full');\n\t\t\t\t} else {\n\t\t\t\t\tcontainerElem.style.maxWidth = '1024px';\n\t\t\t\t\tcontentElem.classList.remove('content--full');\n\t\t\t\t\tuserElem.classList.remove('user--full');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// получить данные из компонента Authorization\n\tgetAuthorizationData = (user, userStatus) => {\n\n\t\tthis.setState({user, userStatus});\n\t};\n\n\trender() {\n\n\t\tconst {posts, contactsStatus, chatStatus, userStatus, user} = this.state;\n\n\t\treturn (\n\t\t\t<div className=\"container\">\n\n\t\t\t\t{(userStatus !== 'loaded') &&\n\n\t\t\t\t<Authorization\n\t\t\t\t\tgetAuthorizationData={this.getAuthorizationData}\n\t\t\t\t/>\n\n\t\t\t\t}\n\n\t\t\t\t{(userStatus === 'loaded') &&\n\n\t\t\t\t<React.Fragment>\n\n\t\t\t\t<Header\n\t\t\t\t\tchatWith={this.chatWith}\n\t\t\t\t\tcontactsStatus={contactsStatus}\n\t\t\t\t\tuser={user}\n\t\t\t\t/>\n\n\t\t\t\t<div className=\"info\">\n\t\t\t\t\t<Contacts\n\t\t\t\t\t\tloadChat={this.loadChat}\n\t\t\t\t\t\tcheckStatus={this.getContactsStatus}\n\t\t\t\t\t\tgetChatData={this.getChatData}\n\t\t\t\t\t\tuser={user}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<div className=\"content\">\n\t\t\t\t\t\t{this.createStatusText(contactsStatus, chatStatus)}\n\n\t\t\t\t\t\t{(chatStatus === 'loaded') && <Chat data={posts} />}\n\t\t\t\t\t\t{(chatStatus === 'loaded') && <Add onAddPosts={this.handleAddPosts} />}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t</React.Fragment>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}